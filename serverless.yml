service: api-sap-mm-id-generator

# Herramientas para trabajo con serverless, en local y en nube
plugins:
  - serverless-offline
  - serverless-offline-local-authorizers-plugin
  - serverless-dynamodb

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  stage: ${opt:stage, 'dev'}
  role: arn:aws:iam::896994900671:role/RolServerless
  deploymentBucket:
    name: spradling-sls-artifacts-us-east-1
    blockPublicAccess: true
    serverSideEncryption: AES256
  httpApi:
    authorizers:
      myJWTAuthorizer:
        type: jwt
        identitySource: $request.header.Authorization
        # Reemplaza los valores de ejemplo con los de tu User Pool
        issuerUrl: https://cognito-idp.us-east-1.amazonaws.com/us-east-1_abcdef123
        audience:
          - api-sap-mm-id-testa-pqn-2349

        local:
          claims:
            - sub=testaSolutions
            - aud=api-sap-mm-id-testa-pqn-2349

functions:
  get-new-Id:
    handler: getNewID/handler.getNewID
    events:
      - httpApi: 
          path: '/getNewID'
          method: 'GET'
          authorizer:
            name: myJWTAuthorizer
            scopes:
              - 'user:read'
  create-new_id:
    handler: createNewId/handler.createNewId
    events:
      - httpApi:
          path: '/createNewID'
          method: 'POST'
          authorizer:
            name: myJWTAuthorizer  
            scopes:
              - 'user:write'
  modified-counter-master:
    handler: modifiedCounterMaster/handler.modifiedCounterMaster
    events:
      - httpApi:
          path: '/modifiedCounterMaster'
          method: 'PUT'
          authorizer:
            name: myJWTAuthorizer
            scopes:
              - 'user:write'
#configuracion de puestro del serverless offline y base de datos dynamo
custom:
  serverless-offline:
    httpPort: 3000
    lambdaPort: 3002

  dynamodb:
    stages:
      - dev
    start:
      port: 8010
      inMemory: false         # va a requerir un archivo de almacenamiento
      dbPath: .offline-data   # Path donde se guarda el archivo de almacenamiento
      migrate: true

resources:
  Resources:
    devTsIdMasterCounter:
      Type: AWS::DynamoDB::Table
      Properties:
        BillingMode: PAY_PER_REQUEST
        TableName: ts_id_master_counter
        AttributeDefinitions:
          - AttributeName: uuid
            AttributeType: S
          - AttributeName: priority
            AttributeType: S
        KeySchema:
          - AttributeName: uuid
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: PriorityIndex 
            KeySchema:
              - AttributeName: priority
                KeyType: HASH
            Projection:
              ProjectionType: ALL
    devTsIdGenerated:
      Type: AWS::DynamoDB::Table
      Properties:
        BillingMode: PAY_PER_REQUEST
        TableName: ts_id_generated
        AttributeDefinitions:
          - AttributeName: uuid
            AttributeType: S
          - AttributeName: id_generated
            AttributeType: S
          - AttributeName: country
            AttributeType: S
          - AttributeName: date_created
            AttributeType: S
        KeySchema:
          - AttributeName: uuid
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: idGeneratedIndex
            KeySchema:
              - AttributeName: id_generated
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: dateCreatedIndex
            KeySchema:
              - AttributeName: country
                KeyType: HASH
              - AttributeName: date_created
                KeyType: RANGE
            Projection:
              ProjectionType: ALL